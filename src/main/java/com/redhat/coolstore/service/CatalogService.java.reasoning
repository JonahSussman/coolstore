["1. Replace the `javax.ejb` import statement with `jakarta.ejb` on line 12.\n2. Replace the `javax.inject` import statement with `jakarta.inject` on line 6.\n3. Replace the `javax.persistence` import statement with `jakarta.persistence` on lines 8, 9, and 10.\n4. Replace the `javax.persistence` import statement with `jakarta.persistence` on line 13.\n5. In JavaEE/JakartaEE, using `@PersistenceContext` was needed to inject a data source. Quarkus, on the other hand, will create the bean automatically just by correctly setting up your datasource. This makes having a `@Produces` annotation on the `EntityManager` illegal in Quarkus. If you are using a `@Produces` annotation for your EntityManager, and it is not needed after configuring your datasource, remove it and `@Inject` the EntityManager. Otherwise, if the producer is still needed, please create a qualification for your produced `EntityManager`, as well as every injection point for the EM. For instance, you can create an `ExtendedContext` qualifier:\n\n   ```java\n   @Qualifier\n   @Target()\n   @Retention(RetentionPolicy.RUNTIME)\n   public @interface ExtendedContext \n   ```\n\n   and then inject your entity managers:\n\n   ```java\n   @ExtendedContext\n   public EntityManager getEm() \n   ```\n\n6. Stateless EJBs can be converted to a cdi bean by replacing the `@Stateless` annotation with a scope eg `@ApplicationScoped` on line 17."]